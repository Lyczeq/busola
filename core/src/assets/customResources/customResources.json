[
  {
    "nav": {
      "path": "wasmplugins",
      "label": "My wasmplugins",
      "category": "My Resources",
      "scope": "namespace",
      "api": "/apis/extensions.istio.io/v1alpha1",
      "resource": {
        "kind": "WasmPlugins",
        "group": "extensions.istio.io",
        "version": "v1alpha1"
      },
      "resourceType": "wasmplugins",
      "hasDetailsView": true
    },
    "list": {
      "title": "My wasmplugins title override",
      "description": "Wasmplugins are a great resource",
      "columns": [
        {
          "header": "plugin name",
          "valuePath": "$.spec.pluginName",
          "display": "status",
          "successValues": ["add_header"],
          "warningValues": ["other_header"]
        },
        {
          "header": "Pretend it's an url",
          "valuePath": "$.spec.url",
          "display": "external-link"
        }
      ]
    },
    "details": {
      "title": "Custom Jobs",
      "fields": {}
    },
    "create": {
      "simple": {
        "schema": {
          "type": "object",
          "properties": {
            "spec": {
              "description": "Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html",
              "type": "object",
              "properties": {
                "imagePullPolicy": {
                  "description": "The pull behaviour to be applied when fetching an OCI image.",
                  "type": "string",
                  "enum": ["UNSPECIFIED_POLICY", "IfNotPresent", "Always"]
                },
                "imagePullSecret": {
                  "description": "Credentials to use for OCI image pulling.",
                  "type": "string"
                },
                "phase": {
                  "description": "Determines where in the filter chain this `WasmPlugin` is to be injected.",
                  "type": "string",
                  "enum": ["UNSPECIFIED_PHASE", "AUTHN", "AUTHZ", "STATS"]
                },
                "pluginConfig": {
                  "description": "The configuration that will be passed on to the plugin.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "pluginName": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "advanced": {
        "schema": {
          "type": "object",
          "properties": {
            "spec": {
              "description": "Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html",
              "type": "object",
              "properties": {
                "imagePullPolicy": {
                  "description": "The pull behaviour to be applied when fetching an OCI image.",
                  "type": "string",
                  "enum": ["UNSPECIFIED_POLICY", "IfNotPresent", "Always"]
                },
                "imagePullSecret": {
                  "description": "Credentials to use for OCI image pulling.",
                  "type": "string"
                },
                "phase": {
                  "description": "Determines where in the filter chain this `WasmPlugin` is to be injected.",
                  "type": "string",
                  "enum": ["UNSPECIFIED_PHASE", "AUTHN", "AUTHZ", "STATS"]
                },
                "pluginConfig": {
                  "description": "The configuration that will be passed on to the plugin.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "pluginName": {
                  "type": "string"
                },
                "priority": {
                  "description": "Determines ordering of `WasmPlugins` in the same `phase`.",
                  "type": "integer",
                  "nullable": true
                },
                "selector": {
                  "type": "object",
                  "properties": {
                    "matchLabels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sha256": {
                  "description": "SHA256 checksum that will be used to verify Wasm module or OCI container.",
                  "type": "string"
                },
                "url": {
                  "description": "URL of a Wasm module or OCI container.",
                  "type": "string"
                },
                "verificationKey": {
                  "type": "string"
                }
              }
            },
            "status": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        }
      }
    }
  },
  {
    "nav": {
      "path": "customjobs",
      "label": "CustomJobs",
      "category": "My Resources",
      "scope": "namespace",
      "resourceType": "jobs",
      "api": "/apis/batch/v1",
      "resource": {
        "kind": "Jobs",
        "group": "batch",
        "version": "v1"
      },
      "hasDetailsView": true
    },
    "list": {
      "title": "My custom jobs title override",
      "description": "Custom jobs are a great resource",
      "columns": [
        {
          "header": "BackOffLimit",
          "valuePath": "$.spec.backoffLimit"
        },
        {
          "header": "Selector's matchLabels",
          "valuePath": "$.spec.selector.matchLabels",
          "display": "labels"
        },
        {
          "header": "Container image names",
          "valuePath": "$.spec.template.spec.volumes",
          "display": "array",
          "arrayValuePath": "$.name"
        }
      ]
    },
    "details": {
      "title": "Custom Jobs",
      "components": [
        {
          "type": "monaco",
          "resource": "job.status.conditions",
          "title": "Job Status Conditions"
        },
        {
          "type": "monaco",
          "resource": "job",
          "title": "Job as a Whole"
        },
        {
          "type": "monaco",
          "resource": "job.metadata.name",
          "title": "Job Name"
        },
        {
          "type": "list",
          "title": {
            "id": "conditionsTitleII"
          },
          "headers": [
            { "id": "headers.conditions.type" },
            { "id": "headers.conditions.status" },
            {
              "id": "headers.conditions.lastProbeTime",
              "en": "Local priority Last Probe"
            },
            "Last Probe Time string no translation"
          ],
          "columns": ["type", "status", "lastProbeTime", "lastProbeTime"],
          "resource": "$.status.conditions"
        },
        {
          "type": "detail-panel",
          "properties": [{
            "header": "Parallelism",
            "valuePath": "$.spec.parallelism"
          },{
            "header": "Completions",
            "valuePath": "$.spec.completions"
          },{
            "header": "Backofflimit",
            "valuePath": "$.spec.backoffLimit"
          }],
          "title": "Some details"
        },
        {
          "type": "list",
          "title": "My own Conditions",
          "headers": ["type", "status", "LaSt PrOBe", "Reason", "Message"],
          "columns": ["type", "status", "lastProbeTime", "reason", "message"],
          "resource": "$.status.conditions"
        }
      ]
    },
    "create": {
      "name_singular": "Custom Jobs",
      "schema": {}
    }
  },
  {
    "nav": {
      "path": "envoyfilters",
      "label": "envoyfilters",
      "category": "My Resources",
      "scope": "namespace",
      "resourceType": "envoyfilters",
      "api": "/apis/networking.istio.io/v1alpha3",
      "resource": {
        "kind": "EnvoyFilters",
        "group": "networking.istio.io",
        "version": "v1alpha3"
      },
      "hasDetailsView": true
    },
    "list": {
      "title": "My list of envoys",
      "description": "Blabla",
      "columns": []
    },
    "details": {
      "title": "Envoy Filter",
      "components": [
        {
          "type": "monaco",
          "resource": "envoyfilter",
          "title": "Filter as a Whole"
        }
      ]
    },
    "create": {
      "name_singular": "Envoy Filters",
        "simple": {
          "schema": {
          "type": "object",
          "properties": {
              "spec": {
                  "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
                  "type": "object",
                  "properties": {
                      "configPatches": {
                          "description": "One or more patches with match conditions.",
                          "type": "array",
                          "items": {
                              "type": "object",
                              "properties": {
                                  "applyTo": {
                                      "type": "string",
                                      "enum": [
                                          "INVALID",
                                          "LISTENER",
                                          "FILTER_CHAIN",
                                          "NETWORK_FILTER",
                                          "HTTP_FILTER",
                                          "ROUTE_CONFIGURATION",
                                          "VIRTUAL_HOST",
                                          "HTTP_ROUTE",
                                          "CLUSTER",
                                          "EXTENSION_CONFIG",
                                          "BOOTSTRAP"
                                      ]
                                  },
                                  "match": {
                                      "description": "Match on listener/route configuration/cluster.",
                                      "type": "object",
                                      "oneOf": [
                                          {
                                              "not": {
                                                  "anyOf": [
                                                      {
                                                          "required": [
                                                              "listener"
                                                          ]
                                                      },
                                                      {
                                                          "required": [
                                                              "routeConfiguration"
                                                          ]
                                                      },
                                                      {
                                                          "required": [
                                                              "cluster"
                                                          ]
                                                      }
                                                  ]
                                              }
                                          },
                                          {
                                              "required": [
                                                  "listener"
                                              ]
                                          },
                                          {
                                              "required": [
                                                  "routeConfiguration"
                                              ]
                                          },
                                          {
                                              "required": [
                                                  "cluster"
                                              ]
                                          }
                                      ],
                                      "properties": {
                                          "cluster": {
                                              "description": "Match on envoy cluster attributes.",
                                              "type": "object",
                                              "properties": {
                                                  "name": {
                                                      "description": "The exact name of the cluster to match.",
                                                      "type": "string"
                                                  },
                                                  "portNumber": {
                                                      "description": "The service port for which this cluster was generated.",
                                                      "type": "integer"
                                                  },
                                                  "service": {
                                                      "description": "The fully qualified service name for this cluster.",
                                                      "type": "string"
                                                  },
                                                  "subset": {
                                                      "description": "The subset associated with the service.",
                                                      "type": "string"
                                                  }
                                              }
                                          },
                                          "context": {
                                              "description": "The specific config generation context to match on.",
                                              "type": "string",
                                              "enum": [
                                                  "ANY",
                                                  "SIDECAR_INBOUND",
                                                  "SIDECAR_OUTBOUND",
                                                  "GATEWAY"
                                              ]
                                          },
                                          "listener": {
                                              "description": "Match on envoy listener attributes.",
                                              "type": "object",
                                              "properties": {
                                                  "filterChain": {
                                                      "description": "Match a specific filter chain in a listener.",
                                                      "type": "object",
                                                      "properties": {
                                                          "applicationProtocols": {
                                                              "description": "Applies only to sidecars.",
                                                              "type": "string"
                                                          },
                                                          "destinationPort": {
                                                              "description": "The destination_port value used by a filter chain's match condition.",
                                                              "type": "integer"
                                                          },
                                                          "filter": {
                                                              "description": "The name of a specific filter to apply the patch to.",
                                                              "type": "object",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "The filter name to match on.",
                                                                      "type": "string"
                                                                  },
                                                                  "subFilter": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "name": {
                                                                              "description": "The filter name to match on.",
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              }
                                                          },
                                                          "name": {
                                                              "description": "The name assigned to the filter chain.",
                                                              "type": "string"
                                                          },
                                                          "sni": {
                                                              "description": "The SNI value used by a filter chain's match condition.",
                                                              "type": "string"
                                                          },
                                                          "transportProtocol": {
                                                              "description": "Applies only to `SIDECAR_INBOUND` context.",
                                                              "type": "string"
                                                          }
                                                      }
                                                  },
                                                  "name": {
                                                      "description": "Match a specific listener by its name.",
                                                      "type": "string"
                                                  },
                                                  "portName": {
                                                      "type": "string"
                                                  },
                                                  "portNumber": {
                                                      "type": "integer"
                                                  }
                                              }
                                          },
                                          "proxy": {
                                              "description": "Match on properties associated with a proxy.",
                                              "type": "object",
                                              "properties": {
                                                  "metadata": {
                                                      "type": "object",
                                                      "additionalProperties": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "proxyVersion": {
                                                      "type": "string"
                                                  }
                                              }
                                          },
                                          "routeConfiguration": {
                                              "description": "Match on envoy HTTP route configuration attributes.",
                                              "type": "object",
                                              "properties": {
                                                  "gateway": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "description": "Route configuration name to match on.",
                                                      "type": "string"
                                                  },
                                                  "portName": {
                                                      "description": "Applicable only for GATEWAY context.",
                                                      "type": "string"
                                                  },
                                                  "portNumber": {
                                                      "type": "integer"
                                                  },
                                                  "vhost": {
                                                      "type": "object",
                                                      "properties": {
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "route": {
                                                              "description": "Match a specific route within the virtual host.",
                                                              "type": "object",
                                                              "properties": {
                                                                  "action": {
                                                                      "description": "Match a route with specific action type.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ANY",
                                                                          "ROUTE",
                                                                          "REDIRECT",
                                                                          "DIRECT_RESPONSE"
                                                                      ]
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              }
                                                          }
                                                      }
                                                  }
                                              }
                                          }
                                      }
                                  },
                                  "patch": {
                                      "description": "The patch to apply along with the operation.",
                                      "type": "object",
                                      "properties": {
                                          "filterClass": {
                                              "description": "Determines the filter insertion order.",
                                              "type": "string",
                                              "enum": [
                                                  "UNSPECIFIED",
                                                  "AUTHN",
                                                  "AUTHZ",
                                                  "STATS"
                                              ]
                                          },
                                          "operation": {
                                              "description": "Determines how the patch should be applied.",
                                              "type": "string",
                                              "enum": [
                                                  "INVALID",
                                                  "MERGE",
                                                  "ADD",
                                                  "REMOVE",
                                                  "INSERT_BEFORE",
                                                  "INSERT_AFTER",
                                                  "INSERT_FIRST",
                                                  "REPLACE"
                                              ]
                                          },
                                          "value": {
                                              "description": "The JSON config of the object being patched.",
                                              "type": "object",
                                              "x-kubernetes-preserve-unknown-fields": true
                                          }
                                      }
                                  }
                              }
                          }
                      },
                      "priority": {
                          "description": "Priority defines the order in which patch sets are applied within a context.",
                          "type": "integer",
                          "format": "int32"
                      },
                      "workloadSelector": {
                          "type": "object",
                          "properties": {
                              "labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              },
              "status": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
              }
          }
      }
    },
      "advanced": {
        "schema": {
        "type": "object",
        "properties": {
            "spec": {
                "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
                "type": "object",
                "properties": {
                    "configPatches": {
                        "description": "One or more patches with match conditions.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "applyTo": {
                                    "type": "string",
                                    "enum": [
                                        "INVALID",
                                        "LISTENER",
                                        "FILTER_CHAIN",
                                        "NETWORK_FILTER",
                                        "HTTP_FILTER",
                                        "ROUTE_CONFIGURATION",
                                        "VIRTUAL_HOST",
                                        "HTTP_ROUTE",
                                        "CLUSTER",
                                        "EXTENSION_CONFIG",
                                        "BOOTSTRAP"
                                    ]
                                },
                                "match": {
                                    "description": "Match on listener/route configuration/cluster.",
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "not": {
                                                "anyOf": [
                                                    {
                                                        "required": [
                                                            "listener"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "routeConfiguration"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "cluster"
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "required": [
                                                "listener"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "routeConfiguration"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "cluster"
                                            ]
                                        }
                                    ],
                                    "properties": {
                                        "cluster": {
                                            "description": "Match on envoy cluster attributes.",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "description": "The exact name of the cluster to match.",
                                                    "type": "string"
                                                },
                                                "portNumber": {
                                                    "description": "The service port for which this cluster was generated.",
                                                    "type": "integer"
                                                },
                                                "service": {
                                                    "description": "The fully qualified service name for this cluster.",
                                                    "type": "string"
                                                },
                                                "subset": {
                                                    "description": "The subset associated with the service.",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "context": {
                                            "description": "The specific config generation context to match on.",
                                            "type": "string",
                                            "enum": [
                                                "ANY",
                                                "SIDECAR_INBOUND",
                                                "SIDECAR_OUTBOUND",
                                                "GATEWAY"
                                            ]
                                        },
                                        "listener": {
                                            "description": "Match on envoy listener attributes.",
                                            "type": "object",
                                            "properties": {
                                                "filterChain": {
                                                    "description": "Match a specific filter chain in a listener.",
                                                    "type": "object",
                                                    "properties": {
                                                        "applicationProtocols": {
                                                            "description": "Applies only to sidecars.",
                                                            "type": "string"
                                                        },
                                                        "destinationPort": {
                                                            "description": "The destination_port value used by a filter chain's match condition.",
                                                            "type": "integer"
                                                        },
                                                        "filter": {
                                                            "description": "The name of a specific filter to apply the patch to.",
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The filter name to match on.",
                                                                    "type": "string"
                                                                },
                                                                "subFilter": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The filter name to match on.",
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "name": {
                                                            "description": "The name assigned to the filter chain.",
                                                            "type": "string"
                                                        },
                                                        "sni": {
                                                            "description": "The SNI value used by a filter chain's match condition.",
                                                            "type": "string"
                                                        },
                                                        "transportProtocol": {
                                                            "description": "Applies only to `SIDECAR_INBOUND` context.",
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "description": "Match a specific listener by its name.",
                                                    "type": "string"
                                                },
                                                "portName": {
                                                    "type": "string"
                                                },
                                                "portNumber": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "proxy": {
                                            "description": "Match on properties associated with a proxy.",
                                            "type": "object",
                                            "properties": {
                                                "metadata": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "proxyVersion": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "routeConfiguration": {
                                            "description": "Match on envoy HTTP route configuration attributes.",
                                            "type": "object",
                                            "properties": {
                                                "gateway": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Route configuration name to match on.",
                                                    "type": "string"
                                                },
                                                "portName": {
                                                    "description": "Applicable only for GATEWAY context.",
                                                    "type": "string"
                                                },
                                                "portNumber": {
                                                    "type": "integer"
                                                },
                                                "vhost": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "route": {
                                                            "description": "Match a specific route within the virtual host.",
                                                            "type": "object",
                                                            "properties": {
                                                                "action": {
                                                                    "description": "Match a route with specific action type.",
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "ANY",
                                                                        "ROUTE",
                                                                        "REDIRECT",
                                                                        "DIRECT_RESPONSE"
                                                                    ]
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "patch": {
                                    "description": "The patch to apply along with the operation.",
                                    "type": "object",
                                    "properties": {
                                        "filterClass": {
                                            "description": "Determines the filter insertion order.",
                                            "type": "string",
                                            "enum": [
                                                "UNSPECIFIED",
                                                "AUTHN",
                                                "AUTHZ",
                                                "STATS"
                                            ]
                                        },
                                        "operation": {
                                            "description": "Determines how the patch should be applied.",
                                            "type": "string",
                                            "enum": [
                                                "INVALID",
                                                "MERGE",
                                                "ADD",
                                                "REMOVE",
                                                "INSERT_BEFORE",
                                                "INSERT_AFTER",
                                                "INSERT_FIRST",
                                                "REPLACE"
                                            ]
                                        },
                                        "value": {
                                            "description": "The JSON config of the object being patched.",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "priority": {
                        "description": "Priority defines the order in which patch sets are applied within a context.",
                        "type": "integer",
                        "format": "int32"
                    },
                    "workloadSelector": {
                        "type": "object",
                        "properties": {
                            "labels": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "status": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
            }
        }
    }
      }
    }
  }
]