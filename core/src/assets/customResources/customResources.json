{
  "shoots": {
    "navigation": {
      "path": "shoots",
      "label": "Shoots",
      "category": "Gardener",
      "scope": "namespace",
      "hasDetailsView": true,
      "resource": {
        "kind": "Shoots",
        "group": "core.gardener.cloud",
        "version": "v1beta1"
      }
    },
    "list": {
      "description": "An interesting description for a Shoot resource",
      "columns": [{
        "header": "Version",
        "valuePath": "spec.kubernetes.version"
        },
        {
        "valuePath": "metadata.annotations['gardener.cloud/created-by']",
        "header": "Created By"
      } ]
    },
    "details": {
      "components": [
        {
          "type": "detailPanel",
          "title": {
            "en": "More details here"
          },
          "properties": [
            {
              "header": "K8s dashboard enabled?",
              "valuePath": "spec.addons.kubernetesDashboard.enabled"
            },
            {
              "header": "Nginx Ingress enabled?",
              "valuePath": "spec.addons.nginxIngress.enabled"
            },
            {
              "header": "Cloud Profile Name",
              "valuePath": "spec.cloudProfileName"
            },
            {
              "header": {
                "en": "Hibernation enabled?"
              },
              "valuePath": "spec.hibernation.enabled"
            }
          ]
        },
        {
          "type": "monacoPanel",
          "valuePath": "$.spec.kubernetes.kubeAPIServer.oidcConfig",
          "title": "OIDC configuration"
        },
        {
          "type": "listPanel",
          "title": {
            "en": "Conditions"
          },
          "headers": [
            { "en": "Type", "de": "Der Typ" },
            { "en": "Condition", "de": "Das Status" },
            {
              "de": "Reason",
              "pl": "Ostatnia sonda"
            },
            "Message"
          ],
          "columns": ["type", "status", "reason", "message"],
          "valuePath": "$.status.conditions"
        }
      ]
    },
    "create": {
      "simple": {
        "schema": {
          "type": "object",
          "properties": {
            "spec": {
              "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
              "type": "object",
              "properties": {
                "cloudProfileName": {
                  "type": "string",
                  "required": "true"
                },
                "provider": {
                  "type": "object",
                  "properties": {
                      "type": {
                        "type": "string"
                      }
                    }
                },
                "kubernetes": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    }
                  }
                },
                "secretBindingName": {
                  "type": "string"
                },
                "region": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "wasmplugins": {
    "navigation": {
      "path": "wasmplugins",
      "label": "My wasmplugins",
      "category": { "de": "Meine Ressourcen" },
      "scope": "namespace",
      "resource": {
        "kind": "WasmPlugins",
        "group": "extensions.istio.io",
        "version": "v1alpha1"
      },
      "hasDetailsView": true
    },
    "list": {
      "nameOverride": "My wasmplugins title override",
      "description": "Wasmplugins are a great resource",
      "columns": [
        {
          "header": "plugin name",
          "valuePath": "$.spec.pluginName",
          "display": "status",
          "successValues": ["add_header"],
          "warningValues": ["other_header"]
        },
        {
          "header": "Pretend it's an url",
          "valuePath": "$.spec.url",
          "display": "external-link"
        }
      ]
    },
    "details": {},
    "create": {
     
    }
  },
  "customjobs": {
    "navigation": {
      "path": "customjobs",
      "label": "Custom Jobs",
      "category": { "de": "Meine Ressourcen" },
      "scope": "namespace",
      "resource": {
        "kind": "Jobs",
        "group": "batch",
        "version": "v1"
      },
      "hasDetailsView": true
    },
    "list": {
      "nameOverride": "My custom jobs title override",
      "description": {
        "en": "Custom jobs are a great resource.",
        "de": "Benutzerdefinierte Jobs sind eine gro√üartige Ressource."
      },
      "columns": [
        {
          "header": {
            "en": "BackOffLimit"
          },
          "valuePath": "$.spec.backoffLimit"
        },
        {
          "header": {
            "de": "MatchLabels des Selektors"
          },
          "valuePath": "$.spec.selector.matchLabels",
          "display": "labels"
        },
        {
          "header": {
            "en": "Container image names",
            "de": "Container-Image-Namen"
          },
          "valuePath": "$.spec.template.spec.volumes",
          "display": "array",
          "arrayValuePath": "$.name"
        }
      ]
    },
    "details": {
      "components": [
        {
          "type": "monacoPanel",
          "valuePath": "$",
          "title": "Job as a Whole",
          "language": "json"
        },
        {
          "type": "monacoPanel",
          "valuePath": "metadata.name",
          "title": { "en": "The Job's Name" },
          "language": "json"
        },
        {
          "type": "listPanel",
          "title": {
            "en": "conditionsTitleII"
          },
          "headers": [
            { "en": "type hej", "de": "Der Typ" },
            { "en": "statusss", "de": "Das Status" },
            {
              "de": "Letze Sonde",
              "pl": "Ostatnia sonda"
            },
            "Last Probe Time string no translation"
          ],
          "columns": ["type", "status", "lastProbeTime", "lastProbeTime"],
          "valuePath": "$.status.conditions"
        },
        {
          "type": "detailPanel",
          "title": {
            "en": "Some details"
          },
          "properties": [
            {
              "header": "Parallelism",
              "valuePath": "$.spec.parallelism"
            },
            {
              "header": "Completions",
              "valuePath": "$.spec.completions"
            },
            {
              "header": {
                "en": "Backofflimit"
              },
              "valuePath": "$.spec.backoffLimit"
            }
          ]
        },
        {
          "type": "listPanel",
          "title": "My own Conditions",
          "headers": ["type", "status", "LaSt PrOBe", "Reason", "Message"],
          "columns": ["type", "status", "lastProbeTime", "reason", "message"],
          "valuePath": "$.status.conditions"
        }
      ]
    },
    "create": {
      "schema": {}
    }
  },
  "envoyfilters": {
    "navigation": {
      "path": "envoyfilters",
      "label": "envoyfilters",
      "category": { "de": "Meine Ressourcen" },
      "scope": "namespace",
      "resource": {
        "kind": "EnvoyFilters",
        "group": "networking.istio.io",
        "version": "v1alpha3"
      },
      "hasDetailsView": true
    },
    "list": {
      "title": "My list of envoys",
      "description": {
        "id": "Blabla"
      },
      "columns": []
    },
    "details": {
      "components": [
        {
          "type": "monacoPanel",
          "resource": "envoyfilter",
          "title": "Filter as a Whole"
        }
      ]
    },
    "create": {
      "name_singular": "Envoy Filters",
      "simple": {
        "schema": {
          "type": "object",
          "properties": {
            "spec": {
              "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
              "type": "object",
              "properties": {
                "configPatches": {
                  "description": "One or more patches with match conditions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "applyTo": {
                        "type": "string",
                        "enum": [
                          "INVALID",
                          "LISTENER",
                          "FILTER_CHAIN",
                          "NETWORK_FILTER",
                          "HTTP_FILTER",
                          "ROUTE_CONFIGURATION",
                          "VIRTUAL_HOST",
                          "HTTP_ROUTE",
                          "CLUSTER",
                          "EXTENSION_CONFIG",
                          "BOOTSTRAP"
                        ]
                      },
                      "match": {
                        "description": "Match on listener/route configuration/cluster.",
                        "type": "object",
                        "oneOf": [
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": ["listener"]
                                },
                                {
                                  "required": ["routeConfiguration"]
                                },
                                {
                                  "required": ["cluster"]
                                }
                              ]
                            }
                          },
                          {
                            "required": ["listener"]
                          },
                          {
                            "required": ["routeConfiguration"]
                          },
                          {
                            "required": ["cluster"]
                          }
                        ],
                        "properties": {
                          "cluster": {
                            "description": "Match on envoy cluster attributes.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The exact name of the cluster to match.",
                                "type": "string"
                              },
                              "portNumber": {
                                "description": "The service port for which this cluster was generated.",
                                "type": "integer"
                              },
                              "service": {
                                "description": "The fully qualified service name for this cluster.",
                                "type": "string"
                              },
                              "subset": {
                                "description": "The subset associated with the service.",
                                "type": "string"
                              }
                            }
                          },
                          "context": {
                            "description": "The specific config generation context to match on.",
                            "type": "string",
                            "enum": [
                              "ANY",
                              "SIDECAR_INBOUND",
                              "SIDECAR_OUTBOUND",
                              "GATEWAY"
                            ]
                          },
                          "listener": {
                            "description": "Match on envoy listener attributes.",
                            "type": "object",
                            "properties": {
                              "filterChain": {
                                "description": "Match a specific filter chain in a listener.",
                                "type": "object",
                                "properties": {
                                  "applicationProtocols": {
                                    "description": "Applies only to sidecars.",
                                    "type": "string"
                                  },
                                  "destinationPort": {
                                    "description": "The destination_port value used by a filter chain's match condition.",
                                    "type": "integer"
                                  },
                                  "filter": {
                                    "description": "The name of a specific filter to apply the patch to.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "The filter name to match on.",
                                        "type": "string"
                                      },
                                      "subFilter": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "The filter name to match on.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name assigned to the filter chain.",
                                    "type": "string"
                                  },
                                  "sni": {
                                    "description": "The SNI value used by a filter chain's match condition.",
                                    "type": "string"
                                  },
                                  "transportProtocol": {
                                    "description": "Applies only to `SIDECAR_INBOUND` context.",
                                    "type": "string"
                                  }
                                }
                              },
                              "name": {
                                "description": "Match a specific listener by its name.",
                                "type": "string"
                              },
                              "portName": {
                                "type": "string"
                              },
                              "portNumber": {
                                "type": "integer"
                              }
                            }
                          },
                          "proxy": {
                            "description": "Match on properties associated with a proxy.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "proxyVersion": {
                                "type": "string"
                              }
                            }
                          },
                          "routeConfiguration": {
                            "description": "Match on envoy HTTP route configuration attributes.",
                            "type": "object",
                            "properties": {
                              "gateway": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Route configuration name to match on.",
                                "type": "string"
                              },
                              "portName": {
                                "description": "Applicable only for GATEWAY context.",
                                "type": "string"
                              },
                              "portNumber": {
                                "type": "integer"
                              },
                              "vhost": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "route": {
                                    "description": "Match a specific route within the virtual host.",
                                    "type": "object",
                                    "properties": {
                                      "action": {
                                        "description": "Match a route with specific action type.",
                                        "type": "string",
                                        "enum": [
                                          "ANY",
                                          "ROUTE",
                                          "REDIRECT",
                                          "DIRECT_RESPONSE"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "patch": {
                        "description": "The patch to apply along with the operation.",
                        "type": "object",
                        "properties": {
                          "filterClass": {
                            "description": "Determines the filter insertion order.",
                            "type": "string",
                            "enum": ["UNSPECIFIED", "AUTHN", "AUTHZ", "STATS"]
                          },
                          "operation": {
                            "description": "Determines how the patch should be applied.",
                            "type": "string",
                            "enum": [
                              "INVALID",
                              "MERGE",
                              "ADD",
                              "REMOVE",
                              "INSERT_BEFORE",
                              "INSERT_AFTER",
                              "INSERT_FIRST",
                              "REPLACE"
                            ]
                          },
                          "value": {
                            "description": "The JSON config of the object being patched.",
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        }
                      }
                    }
                  }
                },
                "priority": {
                  "description": "Priority defines the order in which patch sets are applied within a context.",
                  "type": "integer",
                  "format": "int32"
                },
                "workloadSelector": {
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "status": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        }
      },
      "advanced": {
        "schema": {
          "type": "object",
          "properties": {
            "spec": {
              "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
              "type": "object",
              "properties": {
                "configPatches": {
                  "description": "One or more patches with match conditions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "applyTo": {
                        "type": "string",
                        "enum": [
                          "INVALID",
                          "LISTENER",
                          "FILTER_CHAIN",
                          "NETWORK_FILTER",
                          "HTTP_FILTER",
                          "ROUTE_CONFIGURATION",
                          "VIRTUAL_HOST",
                          "HTTP_ROUTE",
                          "CLUSTER",
                          "EXTENSION_CONFIG",
                          "BOOTSTRAP"
                        ]
                      },
                      "match": {
                        "description": "Match on listener/route configuration/cluster.",
                        "type": "object",
                        "oneOf": [
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": ["listener"]
                                },
                                {
                                  "required": ["routeConfiguration"]
                                },
                                {
                                  "required": ["cluster"]
                                }
                              ]
                            }
                          },
                          {
                            "required": ["listener"]
                          },
                          {
                            "required": ["routeConfiguration"]
                          },
                          {
                            "required": ["cluster"]
                          }
                        ],
                        "properties": {
                          "cluster": {
                            "description": "Match on envoy cluster attributes.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The exact name of the cluster to match.",
                                "type": "string"
                              },
                              "portNumber": {
                                "description": "The service port for which this cluster was generated.",
                                "type": "integer"
                              },
                              "service": {
                                "description": "The fully qualified service name for this cluster.",
                                "type": "string"
                              },
                              "subset": {
                                "description": "The subset associated with the service.",
                                "type": "string"
                              }
                            }
                          },
                          "context": {
                            "description": "The specific config generation context to match on.",
                            "type": "string",
                            "enum": [
                              "ANY",
                              "SIDECAR_INBOUND",
                              "SIDECAR_OUTBOUND",
                              "GATEWAY"
                            ]
                          },
                          "listener": {
                            "description": "Match on envoy listener attributes.",
                            "type": "object",
                            "properties": {
                              "filterChain": {
                                "description": "Match a specific filter chain in a listener.",
                                "type": "object",
                                "properties": {
                                  "applicationProtocols": {
                                    "description": "Applies only to sidecars.",
                                    "type": "string"
                                  },
                                  "destinationPort": {
                                    "description": "The destination_port value used by a filter chain's match condition.",
                                    "type": "integer"
                                  },
                                  "filter": {
                                    "description": "The name of a specific filter to apply the patch to.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "The filter name to match on.",
                                        "type": "string"
                                      },
                                      "subFilter": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "The filter name to match on.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name assigned to the filter chain.",
                                    "type": "string"
                                  },
                                  "sni": {
                                    "description": "The SNI value used by a filter chain's match condition.",
                                    "type": "string"
                                  },
                                  "transportProtocol": {
                                    "description": "Applies only to `SIDECAR_INBOUND` context.",
                                    "type": "string"
                                  }
                                }
                              },
                              "name": {
                                "description": "Match a specific listener by its name.",
                                "type": "string"
                              },
                              "portName": {
                                "type": "string"
                              },
                              "portNumber": {
                                "type": "integer"
                              }
                            }
                          },
                          "proxy": {
                            "description": "Match on properties associated with a proxy.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "proxyVersion": {
                                "type": "string"
                              }
                            }
                          },
                          "routeConfiguration": {
                            "description": "Match on envoy HTTP route configuration attributes.",
                            "type": "object",
                            "properties": {
                              "gateway": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Route configuration name to match on.",
                                "type": "string"
                              },
                              "portName": {
                                "description": "Applicable only for GATEWAY context.",
                                "type": "string"
                              },
                              "portNumber": {
                                "type": "integer"
                              },
                              "vhost": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "route": {
                                    "description": "Match a specific route within the virtual host.",
                                    "type": "object",
                                    "properties": {
                                      "action": {
                                        "description": "Match a route with specific action type.",
                                        "type": "string",
                                        "enum": [
                                          "ANY",
                                          "ROUTE",
                                          "REDIRECT",
                                          "DIRECT_RESPONSE"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "patch": {
                        "description": "The patch to apply along with the operation.",
                        "type": "object",
                        "properties": {
                          "filterClass": {
                            "description": "Determines the filter insertion order.",
                            "type": "string",
                            "enum": ["UNSPECIFIED", "AUTHN", "AUTHZ", "STATS"]
                          },
                          "operation": {
                            "description": "Determines how the patch should be applied.",
                            "type": "string",
                            "enum": [
                              "INVALID",
                              "MERGE",
                              "ADD",
                              "REMOVE",
                              "INSERT_BEFORE",
                              "INSERT_AFTER",
                              "INSERT_FIRST",
                              "REPLACE"
                            ]
                          },
                          "value": {
                            "description": "The JSON config of the object being patched.",
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        }
                      }
                    }
                  }
                },
                "priority": {
                  "description": "Priority defines the order in which patch sets are applied within a context.",
                  "type": "integer",
                  "format": "int32"
                },
                "workloadSelector": {
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "status": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        }
      }
    }
  }
}
